---
- name: Enforce Security Hardening Policy on Ubuntu 22.04
  hosts: all
  become: true

  vars:
    password_policy_applied_after: "2025-07-02"  # Date you apply the policy

    pwquality_conf: |
      minlen = 12
      dcredit = -1
      ucredit = -1
      lcredit = -1
      ocredit = -1
      minclass = 4
      retry = 6
      enforce_for_root

    auto_logout: |
      TMOUT=900
      readonly TMOUT
      export TMOUT

    login_defs_conf:
      - { regexp: '^PASS_MAX_DAYS', line: 'PASS_MAX_DAYS   90' }
      - { regexp: '^PASS_MIN_DAYS', line: 'PASS_MIN_DAYS   0' }
      - { regexp: '^PASS_WARN_AGE', line: 'PASS_WARN_AGE   7' }

    pam_pwquality_line: "password requisite pam_pwquality.so retry=6 minlen=12 ucredit=-1 lcredit=-1 dcredit=-1 ocredit=-1"

    pam_unix_line: "password sufficient pam_unix.so sha512 shadow try_first_pass use_authtok remember=4"

    #pam_tally_line: |
        auth required pam_tally2.so deny=6 unlock_time=1800


  tasks:

    - name: Install required PAM packages
      apt:
        name:
          - libpam-pwquality
          - libpam-modules
        state: present
        update_cache: yes

    - name: Backup PAM common-password
      copy:
        src: /etc/pam.d/common-password
        dest: /etc/pam.d/common-password.bak
        remote_src: yes
        backup: yes

    - name: Backup PAM common-auth
      copy:
        src: /etc/pam.d/common-auth
        dest: /etc/pam.d/common-auth.bak
        remote_src: yes
        backup: yes

    - name: Ensure pam_pwquality line exists in common-password
      lineinfile:
        path: /etc/pam.d/common-password
        regexp: '^password\s+requisite\s+pam_pwquality\.so.*'
        line: "{{ pam_pwquality_line }}"
        insertafter: '^[#@]?password'

    - name: Ensure password history (remember last 4)
      lineinfile:
        path: /etc/pam.d/common-password
        regexp: '^password\s+sufficient\s+pam_unix\.so.*'
        line: "{{ pam_unix_line }}"
        insertafter: '^password\s+requisite\s+pam_pwquality\.so.*'

    - name: Configure /etc/security/pwquality.conf
      copy:
        dest: /etc/security/pwquality.conf
        content: "{{ pwquality_conf }}"
        mode: '0644'

    - name: Add account lockout policy to common-auth
      lineinfile:
        path: /etc/pam.d/common-auth
        regexp: '^auth\s+required\s+pam_tally2\.so.*'
        line: "{{ pam_tally_line }}"
        insertafter: '^[#@]?auth'

    - name: Set password expiry policy in login.defs
      lineinfile:
        path: /etc/login.defs
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      loop: "{{ login_defs_conf }}"

    - name: Set session timeout policy
      copy:
        dest: /etc/profile.d/autologout.sh
        content: "{{ auto_logout }}"
        mode: '0755'

    - name: Get list of users created after policy date
      shell: |
        for u in $(awk -F: '$3 >= 1000 && $3 < 65534 {print $1}' /etc/passwd); do
          homedir=$(eval echo "~$u")
          if [ -d "$homedir" ]; then
            created=$(stat -c %Y "$homedir")
            cutoff=$(date -d "{{ password_policy_applied_after }}" +%s)
            if [ "$created" -gt "$cutoff" ]; then
              echo $u
            fi
          fi
        done
      register: new_users
      changed_when: false

    - name: Set password aging only for users created after policy date
      shell: |
        chage --maxdays 90 --mindays 0 --warndays 7 {{ item }}
      loop: "{{ new_users.stdout_lines }}"
      when: new_users.stdout_lines | length > 0

    - name: Ensure INACTIVE field is set in /etc/default/useradd for future users
      lineinfile:
        path: /etc/default/useradd
        regexp: '^INACTIVE='
        line: 'INACTIVE=0'

    - name: Set default useradd parameters (password expiry for future users)
      command: useradd -D -f 90 -e "" -s /bin/bash
