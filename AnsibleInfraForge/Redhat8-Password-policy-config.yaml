---
- name: Apply Custom Password Policy on RHEL 8
  hosts: all
  become: true

  vars:
    profile_name: secure-policy
    profile_path: /etc/authselect/custom/secure-policy
    pam_system_auth: |
      #%PAM-1.0
      auth      required      pam_env.so
      auth      required      pam_faillock.so preauth silent deny=6 unlock_time=1800
      auth      sufficient    pam_unix.so try_first_pass
      auth      [default=die] pam_faillock.so authfail deny=6 unlock_time=1800
      auth      required      pam_deny.so

      account   required      pam_unix.so
      account   required      pam_faillock.so
      account   sufficient    pam_localuser.so
      account   sufficient    pam_succeed_if.so uid < 1000 quiet
      account   required      pam_permit.so

      password  requisite     pam_pwquality.so retry=6 reject_username enforce_for_root
      password  sufficient    pam_unix.so sha512 shadow try_first_pass use_authtok remember=4
      password  required      pam_deny.so

      session   optional      pam_keyinit.so revoke
      session   required      pam_limits.so
      -session  optional      pam_systemd.so
      session   [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
      session   required      pam_unix.so

    pam_password_auth: "{{ pam_system_auth }}"

    pwquality_conf: |
      minlen = 12
      dcredit = -1
      ucredit = -1
      lcredit = -1
      ocredit = -1
      minclass = 4

    login_defs_conf: |
      PASS_MAX_DAYS   90
      PASS_MIN_DAYS   0
      PASS_WARN_AGE   7

    auto_logout: |
      TMOUT=900
      readonly TMOUT
      export TMOUT

  tasks:

    - name: Install authselect (if not present)
      package:
        name: authselect
        state: present

    - name: Create custom authselect profile
      command: authselect create-profile {{ profile_name }} -b sssd
      args:
        creates: "{{ profile_path }}"

    - name: Select custom profile
      command: authselect select custom/{{ profile_name }} --force

    - name: Deploy system-auth
      copy:
        dest: "{{ profile_path }}/system-auth"
        content: "{{ pam_system_auth }}"
        mode: '0644'

    - name: Deploy password-auth
      copy:
        dest: "{{ profile_path }}/password-auth"
        content: "{{ pam_password_auth }}"
        mode: '0644'

    - name: Apply authselect profile changes
      command: authselect apply-changes

    - name: Configure pwquality.conf
      copy:
        dest: /etc/security/pwquality.conf
        content: "{{ pwquality_conf }}"
        mode: '0644'

    - name: Configure login.defs for password aging
      lineinfile:
        path: /etc/login.defs
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      loop:
        - { regexp: '^PASS_MAX_DAYS', line: 'PASS_MAX_DAYS   90' }
        - { regexp: '^PASS_MIN_DAYS', line: 'PASS_MIN_DAYS   0' }
        - { regexp: '^PASS_WARN_AGE', line: 'PASS_WARN_AGE   7' }

    - name: Set auto logout policy
      copy:
        dest: /etc/profile.d/autologout.sh
        content: "{{ auto_logout }}"
        mode: '0755'

    - name: Set password expiry for existing users (excluding system accounts)
      command: chage --maxdays 90 --mindays 1 --warndays 1 {{ item }}
      loop: "{{ lookup('ansible.builtin.pipe', \"awk -F: '$3 > 1000 && $3 < 65534 {print $1}' /etc/passwd\").splitlines() }}"
      when: item != 'nobody'



